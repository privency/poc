import { VerifyResult } from '@docknetwork/crypto-wasm';
import { MembershipWitness, NonMembershipWitness } from './accumulatorWitness';
import { AccumulatorParams, AccumulatorPublicKey, MembershipProvingKey, NonMembershipProvingKey } from './params-and-keys';
import { BytearrayWrapper } from '../bytearray-wrapper';
export declare class MembershipProofProtocol extends BytearrayWrapper {
    static initialize(member: Uint8Array, witness: MembershipWitness, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: MembershipProvingKey, blinding?: Uint8Array): MembershipProofProtocol;
    generateProof(challenge: Uint8Array): MembershipProof;
    challengeContribution(accumulated: Uint8Array, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: MembershipProvingKey): Uint8Array;
}
export declare class NonMembershipProofProtocol extends BytearrayWrapper {
    static initialize(nonMember: Uint8Array, witness: NonMembershipWitness, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: NonMembershipProvingKey, blinding?: Uint8Array): MembershipProofProtocol;
    generateProof(challenge: Uint8Array): NonMembershipProof;
    challengeContribution(accumulated: Uint8Array, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: NonMembershipProvingKey): Uint8Array;
}
export declare class MembershipProof extends BytearrayWrapper {
    verify(accumulated: Uint8Array, challenge: Uint8Array, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: MembershipProvingKey): VerifyResult;
    challengeContribution(accumulated: Uint8Array, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: MembershipProvingKey): Uint8Array;
}
export declare class NonMembershipProof extends BytearrayWrapper {
    verify(accumulated: Uint8Array, challenge: Uint8Array, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: NonMembershipProvingKey): VerifyResult;
    challengeContribution(accumulated: Uint8Array, publicKey: AccumulatorPublicKey, params: AccumulatorParams, provingKey: NonMembershipProvingKey): Uint8Array;
}
//# sourceMappingURL=proof.d.ts.map