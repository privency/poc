"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegoVerifyingKey = exports.LegoVerifyingKeyUncompressed = exports.LegoProvingKey = exports.LegoProvingKeyUncompressed = void 0;
const bytearray_wrapper_1 = require("../bytearray-wrapper");
const crypto_wasm_1 = require("@docknetwork/crypto-wasm");
/**
 * Uncompressed proving key of LegoGroth16
 */
class LegoProvingKeyUncompressed extends bytearray_wrapper_1.BytearrayWrapper {
}
exports.LegoProvingKeyUncompressed = LegoProvingKeyUncompressed;
/**
 * Compressed proving key of LegoGroth16
 */
class LegoProvingKey extends bytearray_wrapper_1.BytearrayWrapper {
    decompress() {
        return new LegoProvingKeyUncompressed((0, crypto_wasm_1.legosnarkDecompressPk)(this.value));
    }
    /**
     * Get the compressed verifying key from this proving key
     */
    getVerifyingKey() {
        return new LegoVerifyingKey((0, crypto_wasm_1.legosnarkVkFromPk)(this.value, false));
    }
    /**
     * Get the uncompressed verifying key from this proving key
     */
    getVerifyingKeyUncompressed() {
        return new LegoVerifyingKeyUncompressed((0, crypto_wasm_1.legosnarkVkFromPk)(this.value, true));
    }
}
exports.LegoProvingKey = LegoProvingKey;
/**
 * Uncompressed verifying key of LegoGroth16
 */
class LegoVerifyingKeyUncompressed extends bytearray_wrapper_1.BytearrayWrapper {
}
exports.LegoVerifyingKeyUncompressed = LegoVerifyingKeyUncompressed;
/**
 * Compressed verifying key of LegoGroth16
 */
class LegoVerifyingKey extends bytearray_wrapper_1.BytearrayWrapper {
    decompress() {
        return new LegoVerifyingKeyUncompressed((0, crypto_wasm_1.legosnarkDecompressVk)(this.value));
    }
}
exports.LegoVerifyingKey = LegoVerifyingKey;
//# sourceMappingURL=index.js.map