import { SetupParam } from '../composite-proof';
/**
 * Track `SetupParam` create during proving and verification. This class is meant for internal use only.
 */
export declare class SetupParamsTracker {
    setupParams: SetupParam[];
    paramIdToSetupParamIdx: Map<string, number>;
    _accumParamsIdx?: number;
    _memPrkIdx?: number;
    _nonMemPrkIdx?: number;
    _encGensIdx?: number;
    _encGensCompIdx?: number;
    constructor();
    add(sp: SetupParam): number;
    addForParamId(paramId: string, sp: SetupParam): number;
    lastIndex(): number;
    indexForParam(paramId: string): number;
    nthLastIndex(n: number): number;
    hasAccumulatorParams(): boolean;
    hasAccumulatorMemProvingKey(): boolean;
    hasAccumulatorNonMemProvingKey(): boolean;
    hasEncryptionGensCompressed(): boolean;
    hasEncryptionGensUncompressed(): boolean;
    isTrackingParam(paramId: string): boolean;
    addAccumulatorParams(): number;
    addAccumulatorMemProvingKey(): number;
    addAccumulatorNonMemProvingKey(): number;
    addEncryptionGensCompressed(): number;
    addEncryptionGensUncompressed(): number;
    get accumParamsIdx(): number;
    get memPrkIdx(): number;
    get nonMemPrkIdx(): number;
    get encGensIdx(): number;
    get encGensCompIdx(): number;
}
//# sourceMappingURL=setup-params-tracker.d.ts.map