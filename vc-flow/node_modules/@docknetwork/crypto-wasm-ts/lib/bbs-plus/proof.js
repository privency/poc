"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PoKSigProof = exports.PoKSigProtocol = void 0;
const crypto_wasm_1 = require("@docknetwork/crypto-wasm");
const bytearray_wrapper_1 = require("../bytearray-wrapper");
class PoKSigProtocol {
    constructor(protocol) {
        this.value = protocol;
    }
    static initialize(messages, signature, params, encodeMessages, blindings, revealed) {
        if (messages.length !== params.supportedMessageCount()) {
            throw new Error(`Number of messages ${messages.length} is different from ${params.supportedMessageCount()} supported by the signature params`);
        }
        const b = blindings === undefined ? new Map() : blindings;
        const r = revealed === undefined ? new Set() : revealed;
        const protocol = (0, crypto_wasm_1.bbsInitializeProofOfKnowledgeOfSignature)(signature.value, params.value, messages, b, r, encodeMessages);
        return new PoKSigProtocol(protocol);
    }
    generateProof(challenge) {
        return new PoKSigProof((0, crypto_wasm_1.bbsGenProofOfKnowledgeOfSignature)(this.value, challenge));
    }
    challengeContribution(params, encodeMessages, revealedMsgs) {
        const r = revealedMsgs === undefined ? new Map() : revealedMsgs;
        return (0, crypto_wasm_1.bbsChallengeContributionFromProtocol)(this.value, r, params.value, encodeMessages);
    }
}
exports.PoKSigProtocol = PoKSigProtocol;
class PoKSigProof extends bytearray_wrapper_1.BytearrayWrapper {
    verify(challenge, publicKey, params, encodeMessages, revealedMsgs) {
        const r = revealedMsgs === undefined ? new Map() : revealedMsgs;
        return (0, crypto_wasm_1.bbsVerifyProofOfKnowledgeOfSignature)(this.value, r, challenge, publicKey.value, params.value, encodeMessages);
    }
    challengeContribution(params, encodeMessages, revealedMsgs) {
        const r = revealedMsgs === undefined ? new Map() : revealedMsgs;
        return (0, crypto_wasm_1.bbsChallengeContributionFromProof)(this.value, r, params.value, encodeMessages);
    }
}
exports.PoKSigProof = PoKSigProof;
//# sourceMappingURL=proof.js.map