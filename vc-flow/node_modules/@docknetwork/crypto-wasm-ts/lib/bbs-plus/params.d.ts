import { BbsSigParams } from '@docknetwork/crypto-wasm';
/**
 * Signature parameters.
 */
export declare abstract class SignatureParams {
    label?: Uint8Array;
    value: BbsSigParams;
    constructor(params: BbsSigParams, label?: Uint8Array);
    abstract toBytes(): Uint8Array;
    abstract isValid(): boolean;
    /**
     * Number of messages that these params support and can be signed. If less or more messages are to be signed, use
     * `adapt`
     */
    supportedMessageCount(): number;
    /**
     * Is message index valid as per the params
     * @param index
     */
    isValidIndex(index: number): boolean;
    /**
     * Get params, i.e. generator from `this.value.h` for certain indices
     * @param indices
     */
    getParamsForIndices(indices: number[]): Uint8Array[];
    toJSON(): string;
}
export declare class SignatureParamsG1 extends SignatureParams {
    static generate(numMessages: number, label?: Uint8Array): SignatureParamsG1;
    static generateAsBytes(numMessages: number, label?: Uint8Array): Uint8Array;
    toBytes(): Uint8Array;
    isValid(): boolean;
    static valueFromBytes(bytes: Uint8Array): BbsSigParams;
    /**
     * Transform current signature params to sign a different number of messages. Needs the `label` field to be present
     * @param newMsgCount
     */
    adapt(newMsgCount: number): SignatureParamsG1;
    /**
     * Commit to given messages and return the pair [blinding, commitment]
     * @param messageToCommit
     * @param encodeMessages
     * @param blinding - If not provided, a random blinding is generated
     */
    commitToMessages(messageToCommit: Map<number, Uint8Array>, encodeMessages: boolean, blinding?: Uint8Array): [Uint8Array, Uint8Array];
}
export declare class SignatureParamsG2 extends SignatureParams {
    static generate(numMessages: number, label?: Uint8Array): SignatureParamsG2;
    static generateAsBytes(numMessages: number, label?: Uint8Array): Uint8Array;
    isValid(): boolean;
    toBytes(): Uint8Array;
    static valueFromBytes(bytes: Uint8Array): BbsSigParams;
    /**
     * Transform current signature params to sign a different number of messages. Needs the `label` field to be present
     * @param newMsgCount
     */
    adapt(newMsgCount: number): SignatureParamsG2;
}
//# sourceMappingURL=params.d.ts.map